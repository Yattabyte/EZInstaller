language: cpp
os: linux
dist: xenial


addons:
  apt:
    sources: &apt_sources
      - ubuntu-toolchain-r-test
      - llvm-toolchain-xenial-7
      - llvm-toolchain-xenial-8
      - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
        key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'


env:
  global: CODE_COVERAGE=false STATIC_ANALYSIS=false


jobs:
  include:
    - addons: &static_analysis
        apt:
          sources: *apt_sources
          packages: ["clang-9", "clang-tidy-9", "g++-9", "g++-9-multilib", "libc6-dbg", "libc6-dbg:i386", "linux-libc-dev", "linux-libc-dev:i386", "libc++-9-dev", "libc++abi-9-dev", "libstdc++-9-dev"]
          update: true
      env: COMPILER_CXX=clang++-9 COMPILER_C=clang-9 STATIC_ANALYSIS=true
      script:
        - export ASAN_SYMBOLIZER_PATH=$(which llvm-symbolizer) ASAN_OPTIONS=symbolize=1
        - bash ./staticAnalysis.sh


install:
  # Export Environment Variables
  - export CXX="${COMPILER_CXX}"
  - export CC="${COMPILER_C}"

  # Install Dependencies
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  - |
    if [ ${CODE_COVERAGE} = true ]; then
      # Download LCOV
      LCOV_URL="https://github.com/linux-test-project/lcov/releases/download/v1.14/lcov-1.14.tar.gz"
      mkdir lcov && travis_retry wget --no-check-certificate -O - ${LCOV_URL} | tar --strip-components=1 -xz -C lcov
      cd lcov
      make install
      export PATH=${DEPS_DIR}/lcov/bin:${PATH}
    fi
    if [[ "${STATIC_ANALYSIS}" = "true" ]]; then
      # Download OCLint
      wget https://github.com/oclint/oclint/archive/v0.15.tar.gz && tar xf v0.15.tar.gz && cd oclint-0.15\oclint-core && cmake cmake --build . -- -j $(nproc)
      export OCLINT_HOME="$HOME/oclint-0.15"
      export PATH="$OCLINT_HOME/bin:$PATH"
      oclint -version
      # Download latest valgrind
      wget https://sourceware.org/pub/valgrind/valgrind-3.15.0.tar.bz2 && tar xjf valgrind-3.15.0.tar.bz2 && cd valgrind-3.15.0 && ./configure && make && sudo make install && cd ..
      valgrind --version
      # Download latest cppcheck
      wget https://github.com/danmar/cppcheck/archive/1.90.tar.gz && tar xzvf 1.90.tar.gz && cd cppcheck-1.90
      sudo make MATCHCOMPILER=yes FILESDIR=/usr/share/cppcheck HAVE_RULES=yes install
      cd ..
      cppcheck --version
    fi

  - cd ${TRAVIS_BUILD_DIR}


before_script:
  - cmake --version
  - cmake ${CMAKE_OPTIONS_GLOBAL} ${CMAKE_OPTIONS} -DCMAKE_CXX_COMPILER=${CXX} -DCMAKE_C_COMPILER=${CC} . || exit 1


notifications:
  email: false